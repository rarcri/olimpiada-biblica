# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := sword
### Rules for action "build_sword":
quiet_cmd_binding_gyp_sword_target_build_sword = ACTION Building sword library... $@
cmd_binding_gyp_sword_target_build_sword = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p sword_build; ./scripts/build_sword.sh

sword_build/libsword.a: obj := $(abs_obj)
sword_build/libsword.a: builddir := $(abs_builddir)
sword_build/libsword.a: TOOLSET := $(TOOLSET)
sword_build/libsword.a:  FORCE_DO_CMD
	$(call do_cmd,binding_gyp_sword_target_build_sword)

all_deps += sword_build/libsword.a
action_binding_gyp_sword_target_build_sword_outputs := sword_build/libsword.a


### Rules for final target.
# Build our special outputs first.
$(obj).target/sword.stamp: | $(action_binding_gyp_sword_target_build_sword_outputs)

# Preserve order dependency of special output on deps.
$(action_binding_gyp_sword_target_build_sword_outputs): | 

$(obj).target/sword.stamp: TOOLSET := $(TOOLSET)
$(obj).target/sword.stamp:  FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/sword.stamp
# Add target alias
.PHONY: sword
sword: $(obj).target/sword.stamp

# Add target alias to "all" target.
.PHONY: all
all: sword

